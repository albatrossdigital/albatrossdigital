<?php

/**
 * @file
 * Provides a component that previews the a page in various device dimensions.
 */

/**
 * Implements hook_help().
 */
function responsive_preview_help($path, $arg) {

  switch ($path) {
    case 'admin/help#responsive_preview':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Responsive Preview module provides a quick way to preview a page on your site within the dimensions of many popular device and screen sizes.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<p>' . t('To launch a preview, first click the toolbar tab with the small device icon. The tab has the title "@title". A list of devices will appear. Selecting a device name will launch a preview of the current page within the dimensions of that device.', array('@title' => t('Preview page layout'))) . '</p>';
      $output .= '<p>' . t('To close the preview, click the close button signified visually by an x.') . '</p>';
      return $output;
    case 'admin/config/content/responsive-preview':
      $output = '<p>' . t('Configure the set and order of available devices on this page for responsive site preview. The list of devices is shown in a dropdown accessible from the toolbar tab with a small device icon.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function responsive_preview_menu() {
  $items['admin/config/content/responsive-preview'] = array(
    'title' => 'Responsive preview',
    'description' => 'Configure device listings for content preview.',
    'route_name' => 'responsive_preview_device_list',
  );
  $items['admin/config/content/responsive-preview/add'] = array(
    'route_name' => 'responsive_preview_device_add',
    'type' => MENU_SIBLING_LOCAL_TASK,
  );
  $items['admin/config/content/responsive-preview/manage/%responsive_preview_device'] = array(
    'title' => 'Edit device',
    'route_name' => 'responsive_preview_device_edit',
  );
  $items['admin/config/content/responsive-preview/manage/%responsive_preview_device/edit'] = array(
    'title' => 'Edit',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/content/responsive-preview/manage/%responsive_preview_device/delete'] = array(
    'title' => 'Delete',
    'route_name' => 'responsive_preview_device_delete',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_INLINE,
    'weight' => 10,
  );
  return $items;
}
/**
 * Returns a list of devices and their properties from configuration.
 */
function responsive_preview_get_devices_list() {
  $devices = entity_load_multiple('responsive_preview_device');
  uasort($devices, array('Drupal\responsive_preview\Entity\Device', 'sort'));

  $links = array();
  foreach ($devices as $device) {
    if ($device->status) {
      $dimensions = $device->get('dimensions');
      $links[$device->id()] = array(
        '#type' => 'html_tag',
        '#tag' => 'button',
        '#value' => $device->label(),
        '#attributes' => array(
          'class' => array('responsive-preview-device', 'responsive-preview-icon', 'responsive-preview-icon-active'),
          'data-responsive-preview-name' => $device->id(),
          'data-responsive-preview-width' => (!empty($dimensions['width'])) ? $dimensions['width'] : '',
          'data-responsive-preview-height' => (!empty($dimensions['height'])) ? $dimensions['height'] : '',
          'data-responsive-preview-dppx' => (!empty($dimensions['dppx'])) ? $dimensions['dppx'] : '1',
        ),
      );
    }
  }
  // Add a configuration link.
  $links['configure_link'] = array(
    '#type' => 'link',
    '#title' => t('Configure devices'),
    '#href' => url('admin/config/content/responsive-preview'),
    '#options' => array(
      'attributes' => array(
        'class' => array('responsive-preview-configure'),
      ),
    ),
  );

  return $links;
}

/**
 * Fetches a responsive preview device by ID.
 *
 * @param string $id
 *   A string representing the device ID (machine name).
 *
 * @return
 *   A fully-loaded device object if a device with the given ID exists,
 *   or FALSE otherwise.
 */
function responsive_preview_device_load($id) {
  return entity_load('responsive_preview_device', $id);
}

/**
 * Prevents the preview tab from rendering on administration pages.
 */
function responsive_preview_access() {
  return !path_is_admin(current_path());
}

/**
 * Implements hook_toolbar().
 */
function responsive_preview_toolbar() {
  $items['responsive_preview'] = array(
    '#type' => 'toolbar_item',
    'tab' => array(
      'trigger' => array(
        '#type' => 'html_tag',
        '#tag' => 'button',
        '#value' => t('Layout preview'),
        '#value_prefix' => '<span class="visually-hidden">',
        '#value_suffix' => '</span>',
        '#attributes' => array(
          'title' => t('Preview page layout'),
          'class' => array('responsive-preview-icon', 'responsive-preview-icon-responsive-preview', 'responsive-preview-trigger'),
        ),
      ),
      'device_options' => array(
        '#theme' => 'item_list',
        '#items' => responsive_preview_get_devices_list(),
        '#attributes' => array(
          'class' => array('responsive-preview-options'),
        ),
      ),
    ),
    '#wrapper_attributes' => array(
      'id' => 'responsive-preview-toolbar-tab',
      'class' => array('toolbar-tab-responsive-preview'),
    ),
    '#attached' => array(
      'library' => array(
        array('responsive_preview', 'responsive-preview'),
      ),
    ),
    '#weight' => 200,
    '#access' => responsive_preview_access(),
  );

  return $items;
}

/**
 * Implements hook_library().
 */
function responsive_preview_library_info() {
  $path = drupal_get_path('module', 'responsive_preview');
  $options = array(
    'scope' => 'footer',
    'attributes' => array('defer' => TRUE),
  );

  $libraries['responsive-preview'] = array(
    'title' => 'Preview layouts',
    'version' => VERSION,
    'css' => array(
      $path . '/css/responsive-preview.module.css',
      $path . '/css/responsive-preview.theme.css',
      $path . '/css/responsive-preview.icons.css',
    ),
    'js' => array(
      $path . '/js/responsive-preview.js' => $options,
    ),
    'dependencies' => array(
      array('system', 'jquery'),
      array('system', 'drupal'),
      array('system', 'backbone'),
      array('system', 'jquery.ui.position'),
    ),
  );

  return $libraries;
}
